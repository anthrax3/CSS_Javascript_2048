// Generated by CoffeeScript 1.7.1
(function() {
  window.onload = function() {
    "use strict";
    var cellAlreadyMove, cellIsEmpty, checkLimit, chronometre, color, displayGrid, eventTimer, getTile, gridIsFull, initGame, islost, move, moved, score, shareButton, shifts, spawnNumber, str_pad, tab, tabMove, timer, vector, win, x, y;
    y = x = tab = score = win = timer = eventTimer = tabMove = moved = void 0;
    vector = {
      37: [-1, 0],
      38: [0, -1],
      39: [1, 0],
      40: [0, 1]
    };
    initGame = function() {
      if (localStorage.getItem("grid")) {
        tab = JSON.parse(localStorage.getItem("grid"));
        timer = JSON.parse(localStorage.getItem("timer"));
        score = parseInt(localStorage.getItem("score"));
        win = parseInt(localStorage.getItem("win"));
      } else {
        tab = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];
        timer = {
          seconde: 0,
          minute: 0,
          heure: 0
        };
        score = win = 0;
        spawnNumber();
        spawnNumber();
      }
      displayGrid();
      return eventTimer = setInterval(chronometre, 1000);
    };
    displayGrid = function() {
      var cells;
      cells = document.getElementById("grid");
      cells.innerHTML = "<div><h3 id=\"score\">score: " + score + "</h3><h3 id=\"timer\">" + str_pad(timer.heure) + ":" + str_pad(timer.minute) + ":" + str_pad(timer.seconde) + "</h3></div>";
      tab.forEach(function(element, y) {
        return tab[y].forEach(function(element, x) {
          var cell, number;
          cell = {
            x: x,
            y: y
          };
          number = cellIsEmpty(cell) ? "" : getTile(cell).value;
          return cells.innerHTML += "<div class=\"cell tile-" + color(number) + "\">" + number + "</div>";
        });
      });
      shareButton();
      cells.innerHTML += "<h3 id=\"restart\">Recommencer</h3>";
      document.getElementById("restart").onclick = function() {
        window.clearInterval(eventTimer);
        localStorage.clear();
        return initGame();
      };
      if (win === 1) {
        cells.appendChild(document.createTextNode("Tu as gagné"));
      }
      if (win === -1) {
        window.clearInterval(eventTimer);
        return cells.appendChild(document.createTextNode("Tu as perdu"));
      }
    };
    color = function(nbr) {
      if (nbr === "") {
        return "0";
      }
      if (nbr > "2048") {
        return "super";
      }
      return nbr;
    };
    cellIsEmpty = function(cell) {
      return tab[cell.y][cell.x] === 0;
    };
    getTile = function(cell) {
      if (cellIsEmpty(cell)) {
        return null;
      } else {
        return {
          x: cell.x,
          y: cell.y,
          value: tab[cell.y][cell.x] || 2
        };
      }
    };
    gridIsFull = function() {
      tab.forEach(function(element, y) {
        if (tab[y].indexOf(0) !== -1) {
          return false;
        }
      });
      return true;
    };
    checkLimit = function(position) {
      return position.x >= 0 && position.x < tab.length && position.y >= 0 && position.y < tab.length;
    };
    spawnNumber = function() {
      var _results;
      _results = [];
      while (true) {
        x = Math.floor(Math.random() * tab.length);
        y = Math.floor(Math.random() * tab.length);
        if (tab[y][x] === 0) {
          tab[y][x] = (Math.random() < 0.9 ? 2 : 4);
          break;
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };
    cellAlreadyMove = function(cell) {
      return tabMove[cell.y][cell.x] === 1;
    };
    islost = function() {
      var count, down, left, right, up, _i, _j, _ref, _ref1;
      count = 0;
      for (y = _i = 0, _ref = tab.length; 0 <= _ref ? _i < _ref : _i > _ref; y = 0 <= _ref ? ++_i : --_i) {
        for (x = _j = 0, _ref1 = tab.length; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; x = 0 <= _ref1 ? ++_j : --_j) {
          right = left = up = down = false;
          if (tab[x][y] === 0) {
            return false;
          }
          if (tab[x][y] !== 0) {
            if (tab[x][y + 1] !== 0 && tab[x][y + 1] !== tab[x][y]) {
              up = true;
            }
            if (tab[x][y - 1] !== 0 && tab[x][y - 1] !== tab[x][y]) {
              down = true;
            }
            if ((x === 3) || (x + 1 < 4 && tab[x + 1][y] !== 0 && tab[x + 1][y] !== tab[x][y])) {
              right = true;
            }
            if ((x === 0) || (x - 1 >= 0 && tab[x - 1][y] !== 0 && tab[x - 1][y] !== tab[x][y])) {
              left = true;
            }
            if (up === true && down === true && right === true && left === true) {
              count++;
            }
            if (count >= 16) {
              return true;
            }
          }
        }
      }
      return false;
    };
    move = function(x, y, dir) {
      var after, before, cell, tile;
      cell = {
        x: x,
        y: y
      };
      tile = getTile(cell);
      if (tile) {
        after = 0;
        before = void 0;
        while (true) {
          before = cell;
          cell = {
            x: before.x + dir[0],
            y: before.y + dir[1]
          };
          if (!(checkLimit(cell) && cellIsEmpty(cell))) {
            break;
          }
        }
        dir = {
          moreFarAway: before,
          after: cell
        };
        if (checkLimit(dir.after)) {
          after = getTile(dir.after);
        }
        if (after.value === tile.value && !cellAlreadyMove(dir.after)) {
          tabMove[dir.after.y][dir.after.x] = 1;
          tab[tile.y][tile.x] = 0;
          tab[after.y][after.x] = tile.value * 2;
          score += tile.value * 2;
          if (tile.value * 2 === 2048) {
            return win = 1;
          }
        } else {
          tab[tile.y][tile.x] = 0;
          return tab[dir.moreFarAway.y][dir.moreFarAway.x] = tile.value;
        }
      }
    };
    shifts = function(dir) {
      var rangex, rangey, rstate;
      rstate = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];
      tab.forEach(function(element, y) {
        return tab[y].forEach(function(element, x) {
          return rstate[y][x] = tab[y][x];
        });
      });
      rangex = [0, 1, 2, 3];
      rangey = [0, 1, 2, 3];
      tabMove = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];
      moved = false;
      if (dir[0] === 1) {
        rangex.reverse();
      }
      if (dir[1] === 1) {
        rangey.reverse();
      }
      rangey.forEach(function(y) {
        return rangex.forEach(function(x) {
          return move(x, y, dir);
        });
      });
      if (JSON.stringify(tab) !== JSON.stringify(rstate)) {
        spawnNumber();
      }
      if (islost()) {
        win = -1;
      }
      displayGrid();
      localStorage.setItem("grid", JSON.stringify(tab));
      localStorage.setItem("score", score);
      return localStorage.setItem("win", win);
    };
    chronometre = function() {
      timer.seconde++;
      if (timer.seconde > 59) {
        timer.seconde = 0;
        timer.minute++;
      }
      if (timer.minute > 59) {
        timer.minute = 0;
        timer.heure++;
      }
      localStorage.setItem("timer", JSON.stringify(timer));
      return document.getElementById("timer").innerHTML = str_pad(timer.heure) + ":" + str_pad(timer.minute) + ":" + str_pad(timer.seconde);
    };
    shareButton = function() {
      var share;
      share = document.getElementById("share");
      return share.innerHTML = "<a target=\"_blank\" title=\"Twitter\" href=\"https://twitter.com/share?url=" + document.URL + "&text=J'ai joué à 2048 et j'ai fait un score de " + score + "\" rel=\"nofollow\" onclick=\"javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=400,width=700');return false;\"><img src=\"http://korben.info/wp-content/themes/korben2013/hab/twitter_icon.png\" alt=\"Twitter\" /></a><br><a target=\"_blank\" title=\"Facebook\" href=\"https://www.facebook.com/dialog/feed?app_id=145634995501895&display=popup&link=" + document.URL + "&redirect_uri=https://developers.facebook.com/tools/explorer\" rel=\"nofollow\" onclick=\"javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=500,width=700');return false;\"><img src=\"http://korben.info/wp-content/themes/korben2013/hab/facebook_icon.png\" alt=\"Facebook\" /></a><br><a target=\"_blank\" title=\"Google +\" href=\"https://plus.google.com/share?url=" + document.URL + "&hl=fr\" rel=\"nofollow\" onclick=\"javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=450,width=650');return false;\"><img src=\"http://korben.info/wp-content/themes/korben2013/hab/gplus_icon.png\" alt=\"Google Plus\" /></a><br><a target=\"_blank\" title=\"Linkedin\" href=\"https://www.linkedin.com/shareArticle?mini=true&url=" + document.URL + "&title=2048 c'est de la balle\" rel=\"nofollow\" onclick=\"javascript:window.open(this.href, '','menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=450,width=650');return false;\"><img src=\"http://korben.info/wp-content/themes/korben2013/hab/linkedin_icon.png\" alt=\"Linkedin\" /></a>";
    };
    str_pad = function(n) {
      if (n < 10) {
        return "0" + n;
      } else {
        return n;
      }
    };
    window.addEventListener("keydown", function(event) {
      if (vector[event.keyCode]) {
        return shifts(vector[event.keyCode]);
      }
    });
    return initGame();
  };

}).call(this);
